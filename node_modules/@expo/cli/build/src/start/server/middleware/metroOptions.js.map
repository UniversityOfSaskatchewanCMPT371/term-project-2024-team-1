{"version":3,"sources":["../../../../../src/start/server/middleware/metroOptions.ts"],"sourcesContent":["import { ExpoConfig } from '@expo/config';\nimport type { BundleOptions as MetroBundleOptions } from 'metro/src/shared/types';\nimport resolveFrom from 'resolve-from';\n\nimport { env } from '../../../utils/env';\nimport { getRouterDirectoryModuleIdWithManifest } from '../metro/router';\n\nconst debug = require('debug')('expo:metro:options') as typeof console.log;\n\nexport type ExpoMetroOptions = {\n  platform: string;\n  mainModuleName: string;\n  mode: string;\n  minify?: boolean;\n  environment?: string;\n  serializerOutput?: 'static';\n  serializerIncludeMaps?: boolean;\n  serializerIncludeBytecode?: boolean;\n  lazy?: boolean;\n  engine?: 'hermes';\n  preserveEnvVars?: boolean;\n  asyncRoutes?: boolean;\n\n  baseUrl?: string;\n  isExporting: boolean;\n  /** Module ID relative to the projectRoot for the Expo Router app directory. */\n  routerRoot: string;\n  inlineSourceMap?: boolean;\n};\n\nexport type SerializerOptions = {\n  includeSourceMaps?: boolean;\n  includeBytecode?: boolean;\n  output?: 'static';\n};\n\nexport type ExpoMetroBundleOptions = MetroBundleOptions & {\n  serializerOptions?: SerializerOptions;\n};\n\nexport function shouldEnableAsyncImports(projectRoot: string): boolean {\n  if (env.EXPO_NO_METRO_LAZY) {\n    return false;\n  }\n\n  // `@expo/metro-runtime` includes support for the fetch + eval runtime code required\n  // to support async imports. If it's not installed, we can't support async imports.\n  // If it is installed, the user MUST import it somewhere in their project.\n  // Expo Router automatically pulls this in, so we can check for it.\n  return resolveFrom.silent(projectRoot, '@expo/metro-runtime') != null;\n}\n\nfunction withDefaults({\n  mode = 'development',\n  minify = mode === 'production',\n  preserveEnvVars = env.EXPO_NO_CLIENT_ENV_VARS,\n  lazy,\n  ...props\n}: ExpoMetroOptions): ExpoMetroOptions {\n  return {\n    mode,\n    minify,\n    preserveEnvVars,\n    lazy: !props.isExporting && lazy,\n    ...props,\n  };\n}\n\nexport function getBaseUrlFromExpoConfig(exp: ExpoConfig) {\n  return exp.experiments?.baseUrl?.trim().replace(/\\/+$/, '') ?? '';\n}\nexport function getAsyncRoutesFromExpoConfig(exp: ExpoConfig, mode: string, platform: string) {\n  let asyncRoutesSetting;\n\n  if (exp.extra?.router?.asyncRoutes) {\n    const asyncRoutes = exp.extra?.router?.asyncRoutes;\n    if (['boolean', 'string'].includes(typeof asyncRoutes)) {\n      asyncRoutesSetting = asyncRoutes;\n    } else if (typeof asyncRoutes === 'object') {\n      asyncRoutesSetting = asyncRoutes[platform] ?? asyncRoutes.default;\n    }\n  }\n\n  return [mode, true].includes(asyncRoutesSetting);\n}\n\nexport function getMetroDirectBundleOptionsForExpoConfig(\n  projectRoot: string,\n  exp: ExpoConfig,\n  options: Omit<ExpoMetroOptions, 'baseUrl' | 'routerRoot' | 'asyncRoutes'>\n): Partial<ExpoMetroBundleOptions> {\n  return getMetroDirectBundleOptions({\n    ...options,\n    baseUrl: getBaseUrlFromExpoConfig(exp),\n    routerRoot: getRouterDirectoryModuleIdWithManifest(projectRoot, exp),\n    asyncRoutes: getAsyncRoutesFromExpoConfig(exp, options.mode, options.platform),\n  });\n}\n\nexport function getMetroDirectBundleOptions(\n  options: ExpoMetroOptions\n): Partial<ExpoMetroBundleOptions> {\n  const {\n    mainModuleName,\n    platform,\n    mode,\n    minify,\n    environment,\n    serializerOutput,\n    serializerIncludeMaps,\n    serializerIncludeBytecode,\n    lazy,\n    engine,\n    preserveEnvVars,\n    asyncRoutes,\n    baseUrl,\n    routerRoot,\n    isExporting,\n    inlineSourceMap,\n  } = withDefaults(options);\n\n  const dev = mode !== 'production';\n  const isHermes = engine === 'hermes';\n\n  if (isExporting) {\n    debug('Disabling lazy bundling for export build');\n    options.lazy = false;\n  }\n\n  let fakeSourceUrl: string | undefined;\n  let fakeSourceMapUrl: string | undefined;\n\n  // TODO: Upstream support to Metro for passing custom serializer options.\n  if (\n    serializerIncludeMaps != null ||\n    serializerOutput != null ||\n    serializerIncludeBytecode != null\n  ) {\n    fakeSourceUrl = new URL(\n      createBundleUrlPath(options).replace(/^\\//, ''),\n      'http://localhost:8081'\n    ).toString();\n    if (serializerIncludeMaps) {\n      fakeSourceMapUrl = fakeSourceUrl.replace('.bundle?', '.map?');\n    }\n  }\n\n  const bundleOptions: Partial<ExpoMetroBundleOptions> = {\n    platform,\n    entryFile: mainModuleName,\n    dev,\n    minify: !isHermes && (minify ?? !dev),\n    inlineSourceMap: inlineSourceMap ?? false,\n    lazy,\n    unstable_transformProfile: isHermes ? 'hermes-stable' : 'default',\n    customTransformOptions: {\n      __proto__: null,\n      engine,\n      preserveEnvVars,\n      asyncRoutes,\n      environment,\n      baseUrl,\n      routerRoot,\n    },\n    customResolverOptions: {\n      __proto__: null,\n      environment,\n    },\n    sourceMapUrl: fakeSourceMapUrl,\n    sourceUrl: fakeSourceUrl,\n    serializerOptions: {\n      output: serializerOutput,\n      includeSourceMaps: serializerIncludeMaps,\n      includeBytecode: serializerIncludeBytecode,\n    },\n  };\n\n  return bundleOptions;\n}\n\nexport function createBundleUrlPathFromExpoConfig(\n  projectRoot: string,\n  exp: ExpoConfig,\n  options: Omit<ExpoMetroOptions, 'baseUrl' | 'routerRoot'>\n): string {\n  return createBundleUrlPath({\n    ...options,\n    baseUrl: getBaseUrlFromExpoConfig(exp),\n    routerRoot: getRouterDirectoryModuleIdWithManifest(projectRoot, exp),\n  });\n}\n\nexport function createBundleUrlPath(options: ExpoMetroOptions): string {\n  const {\n    platform,\n    mainModuleName,\n    mode,\n    minify,\n    environment,\n    serializerOutput,\n    serializerIncludeMaps,\n    serializerIncludeBytecode,\n    lazy,\n    engine,\n    preserveEnvVars,\n    asyncRoutes,\n    baseUrl,\n    routerRoot,\n    inlineSourceMap,\n    isExporting,\n  } = withDefaults(options);\n\n  const dev = String(mode !== 'production');\n  const queryParams = new URLSearchParams({\n    platform: encodeURIComponent(platform),\n    dev,\n    // TODO: Is this still needed?\n    hot: String(false),\n  });\n\n  // Lazy bundling must be disabled for bundle splitting to work.\n  if (!isExporting && lazy) {\n    queryParams.append('lazy', String(lazy));\n  }\n\n  if (inlineSourceMap) {\n    queryParams.append('inlineSourceMap', String(inlineSourceMap));\n  }\n\n  if (minify) {\n    queryParams.append('minify', String(minify));\n  }\n\n  if (engine) {\n    queryParams.append('transform.engine', engine);\n  }\n\n  if (asyncRoutes) {\n    queryParams.append('transform.asyncRoutes', String(asyncRoutes));\n  }\n  if (preserveEnvVars) {\n    queryParams.append('transform.preserveEnvVars', String(preserveEnvVars));\n  }\n  if (baseUrl) {\n    queryParams.append('transform.baseUrl', baseUrl);\n  }\n  if (routerRoot != null) {\n    queryParams.append('transform.routerRoot', routerRoot);\n  }\n\n  if (environment) {\n    queryParams.append('resolver.environment', environment);\n    queryParams.append('transform.environment', environment);\n  }\n\n  if (serializerOutput) {\n    queryParams.append('serializer.output', serializerOutput);\n  }\n  if (serializerIncludeMaps) {\n    queryParams.append('serializer.map', String(serializerIncludeMaps));\n  }\n  if (serializerIncludeBytecode) {\n    queryParams.append('serializer.bytecode', String(serializerIncludeBytecode));\n  }\n\n  return `/${encodeURI(mainModuleName)}.bundle?${queryParams.toString()}`;\n}\n"],"names":["shouldEnableAsyncImports","getBaseUrlFromExpoConfig","getAsyncRoutesFromExpoConfig","getMetroDirectBundleOptionsForExpoConfig","getMetroDirectBundleOptions","createBundleUrlPathFromExpoConfig","createBundleUrlPath","debug","require","projectRoot","env","EXPO_NO_METRO_LAZY","resolveFrom","silent","withDefaults","mode","minify","preserveEnvVars","EXPO_NO_CLIENT_ENV_VARS","lazy","props","isExporting","exp","experiments","baseUrl","trim","replace","platform","asyncRoutesSetting","extra","router","asyncRoutes","includes","default","options","routerRoot","getRouterDirectoryModuleIdWithManifest","mainModuleName","environment","serializerOutput","serializerIncludeMaps","serializerIncludeBytecode","engine","inlineSourceMap","dev","isHermes","fakeSourceUrl","fakeSourceMapUrl","URL","toString","bundleOptions","entryFile","unstable_transformProfile","customTransformOptions","__proto__","customResolverOptions","sourceMapUrl","sourceUrl","serializerOptions","output","includeSourceMaps","includeBytecode","String","queryParams","URLSearchParams","encodeURIComponent","hot","append","encodeURI"],"mappings":"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"}