BEGIN;

-- CREATE DATABASE IF NOT EXISTS test;
-- USE test;

DROP TABLE IF EXISTS User;
DROP TABLE IF EXISTS Request;
DROP TABLE IF EXISTS Survey;
DROP TABLE IF EXISTS Question;
DROP TABLE IF EXISTS ResponseOption;
DROP TABLE IF EXISTS Answer;
DROP TABLE IF EXISTS SurveyQuestionMap;

CREATE TABLE User (
  id INT AUTO_INCREMENT PRIMARY KEY,
  userId VARCHAR(255) NOT NULL UNIQUE,
  password VARCHAR(500) NOT NULL,
  email VARCHAR(255) NOT NULL UNIQUE,
  clinicName VARCHAR(255) NOT NULL,
  isAdmin BOOLEAN NOT NULL
);

CREATE TABLE Request (
  id INT AUTO_INCREMENT PRIMARY KEY,
  clinicName VARCHAR(255) NOT NULL,
  email VARCHAR(255) NOT NULL,
  password VARCHAR(500) NOT NULL,
  status VARCHAR(255) NOT NULL,
  createdDate DATETIME NOT NULL,
  decisionDate DATETIME,
  requestType VARCHAR(255) NOT NULL
);

CREATE TABLE Survey (
  id INT AUTO_INCREMENT PRIMARY KEY,
  surveyName VARCHAR(255) NOT NULL,
  dateCreated DATETIME NOT NULL
);

CREATE TABLE Question (
  id INT AUTO_INCREMENT PRIMARY KEY,
  parentId INT,
  question VARCHAR(500) NOT NULL,
  standard BOOLEAN NOT NULL,
  type VARCHAR(255) NOT NULL,
  FOREIGN KEY (parentId) REFERENCES Question(id)
);

CREATE TABLE ResponseOption (
  id INT AUTO_INCREMENT PRIMARY KEY,
  `option` VARCHAR(255) NOT NULL,
  questionId INT NOT NULL,
  FOREIGN KEY (questionId) REFERENCES Question(id)
);

CREATE TABLE Answer (
  id INT AUTO_INCREMENT PRIMARY KEY,
  answer VARCHAR(255) NOT NULL,
  questionId INT NOT NULL,
  userId INT NOT NULL,
  FOREIGN KEY (questionId) REFERENCES Question(id),
  FOREIGN KEY (userId) REFERENCES User(id)
);

CREATE TABLE SurveyQuestionMap (
  id INT AUTO_INCREMENT PRIMARY KEY,
  surveyId INT NOT NULL,
  questionId INT NOT NULL,
  rankOrder INT NOT NULL,
  FOREIGN KEY (surveyId) REFERENCES Survey(id),
  FOREIGN KEY (questionId) REFERENCES Question(id)
);

COMMIT;